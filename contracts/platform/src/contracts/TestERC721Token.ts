import {
  Contract,
  ContractFactory,
  ContractTransaction,
  EventFilter,
  Signer
} from "ethers";
import { Listener, Provider } from "ethers/providers";
import { Arrayish, BigNumber, BigNumberish, Interface } from "ethers/utils";
import {
  TransactionOverrides,
  TypedFunctionDescription,
  TypedEventDescription
} from ".";

interface TestERC721TokenInterface extends Interface {
  functions: {
    supportsInterface: TypedFunctionDescription<{
      encode([interfaceId]: [Arrayish]): string;
    }>;

    getApproved: TypedFunctionDescription<{
      encode([tokenId]: [BigNumberish]): string;
    }>;

    approve: TypedFunctionDescription<{
      encode([to, tokenId]: [string, BigNumberish]): string;
    }>;

    transferFrom: TypedFunctionDescription<{
      encode([from, to, tokenId]: [string, string, BigNumberish]): string;
    }>;

    safeTransferFrom: TypedFunctionDescription<{
      encode([from, to, tokenId, _data]: [
        string,
        string,
        BigNumberish,
        Arrayish
      ]): string;
    }>;

    ownerOf: TypedFunctionDescription<{
      encode([tokenId]: [BigNumberish]): string;
    }>;

    balanceOf: TypedFunctionDescription<{ encode([owner]: [string]): string }>;

    setApprovalForAll: TypedFunctionDescription<{
      encode([to, approved]: [string, boolean]): string;
    }>;

    isApprovedForAll: TypedFunctionDescription<{
      encode([owner, operator]: [string, string]): string;
    }>;

    mint: TypedFunctionDescription<{
      encode([to, count]: [string, BigNumberish]): string;
    }>;

    totalSupply: TypedFunctionDescription<{ encode([]: []): string }>;
  };
  events: {
    Transfer: TypedEventDescription<{
      encodeTopics([from, to, tokenId]: [
        string | null,
        string | null,
        BigNumberish | null
      ]): string[];
    }>;

    Approval: TypedEventDescription<{
      encodeTopics([owner, approved, tokenId]: [
        string | null,
        string | null,
        BigNumberish | null
      ]): string[];
    }>;

    ApprovalForAll: TypedEventDescription<{
      encodeTopics([owner, operator, approved]: [
        string | null,
        string | null,
        null
      ]): string[];
    }>;
  };
}

export interface TestERC721Token {
  interface: TestERC721TokenInterface;
  connect(signerOrProvider: Signer | Provider | string): TestERC721Token;
  attach(addressOrName: string): TestERC721Token;
  deployed(): Promise<TestERC721Token>;
  on(event: EventFilter | string, listener: Listener): TestERC721Token;
  once(event: EventFilter | string, listener: Listener): TestERC721Token;
  addListener(
    eventName: EventFilter | string,
    listener: Listener
  ): TestERC721Token;
  removeAllListeners(eventName: EventFilter | string): TestERC721Token;
  removeListener(eventName: any, listener: Listener): TestERC721Token;

  supportsInterface(interfaceId: Arrayish): Promise<boolean>;
  getApproved(tokenId: BigNumberish): Promise<string>;
  approve(
    to: string,
    tokenId: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;
  transferFrom(
    from: string,
    to: string,
    tokenId: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;
  safeTransferFrom(
    from: string,
    to: string,
    tokenId: BigNumberish,
    _data: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;
  ownerOf(tokenId: BigNumberish): Promise<string>;
  balanceOf(owner: string): Promise<BigNumber>;
  setApprovalForAll(
    to: string,
    approved: boolean,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;
  isApprovedForAll(owner: string, operator: string): Promise<boolean>;
  mint(
    to: string,
    count: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;
  totalSupply(): Promise<BigNumber>;

  Transfer(
    from: string | null,
    to: string | null,
    tokenId: BigNumberish | null
  ): EventFilter;
  Approval(
    owner: string | null,
    approved: string | null,
    tokenId: BigNumberish | null
  ): EventFilter;
  ApprovalForAll(
    owner: string | null,
    operator: string | null,
    approved: null
  ): EventFilter;

  estimate: {
    supportsInterface(interfaceId: Arrayish): Promise<BigNumber>;
    getApproved(tokenId: BigNumberish): Promise<BigNumber>;
    approve(to: string, tokenId: BigNumberish): Promise<BigNumber>;
    transferFrom(
      from: string,
      to: string,
      tokenId: BigNumberish
    ): Promise<BigNumber>;
    safeTransferFrom(
      from: string,
      to: string,
      tokenId: BigNumberish,
      _data: Arrayish
    ): Promise<BigNumber>;
    ownerOf(tokenId: BigNumberish): Promise<BigNumber>;
    balanceOf(owner: string): Promise<BigNumber>;
    setApprovalForAll(to: string, approved: boolean): Promise<BigNumber>;
    isApprovedForAll(owner: string, operator: string): Promise<BigNumber>;
    mint(to: string, count: BigNumberish): Promise<BigNumber>;
    totalSupply(): Promise<BigNumber>;
  };
}

export class TestERC721Token extends Contract {
  public static at(signer: Signer, addressOrName: string): TestERC721Token {
    let factory = new ContractFactory(this.ABI, this.Bytecode, signer);
    return (factory.attach(addressOrName) as unknown) as TestERC721Token;
  }

  public static deploy(signer: Signer): Promise<TestERC721Token> {
    let factory = new ContractFactory(this.ABI, this.Bytecode, signer);
    return (factory.deploy() as unknown) as Promise<TestERC721Token>;
  }

  public static ABI =
    '[{"constant":true,"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"constant":false,"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"count","type":"uint256"}],"name":"mint","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"}]';
  public static Bytecode =
    "0x60806040526100367f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b0361006d16565b6100687f80ac58cd000000000000000000000000000000000000000000000000000000006001600160e01b0361006d16565b61013b565b7fffffffff0000000000000000000000000000000000000000000000000000000080821614156100fe57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b7fffffffff00000000000000000000000000000000000000000000000000000000166000908152602081905260409020805460ff19166001179055565b6111458061014a6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806342842e0e1161007157806342842e0e146101d75780636352211e1461020d57806370a082311461022a578063a22cb46514610250578063b88d4fde1461027e578063e985e9c514610344576100b4565b806301ffc9a7146100b9578063081812fc146100f4578063095ea7b31461012d57806318160ddd1461015b57806323b872dd1461017557806340c10f19146101ab575b600080fd5b6100e0600480360360208110156100cf57600080fd5b50356001600160e01b031916610372565b604080519115158252519081900360200190f35b6101116004803603602081101561010a57600080fd5b5035610391565b604080516001600160a01b039092168252519081900360200190f35b6101596004803603604081101561014357600080fd5b506001600160a01b0381351690602001356103f3565b005b61016361051b565b60408051918252519081900360200190f35b6101596004803603606081101561018b57600080fd5b506001600160a01b03813581169160208101359091169060400135610521565b610159600480360360408110156101c157600080fd5b506001600160a01b03813516906020013561057d565b610159600480360360608110156101ed57600080fd5b506001600160a01b038135811691602081013590911690604001356105ad565b6101116004803603602081101561022357600080fd5b50356105c8565b6101636004803603602081101561024057600080fd5b50356001600160a01b0316610622565b6101596004803603604081101561026657600080fd5b506001600160a01b038135169060200135151561068a565b6101596004803603608081101561029457600080fd5b6001600160a01b038235811692602081013590911691604082013591908101906080810160608201356401000000008111156102cf57600080fd5b8201836020820111156102e157600080fd5b8035906020019184600183028401116401000000008311171561030357600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061078f945050505050565b6100e06004803603604081101561035a57600080fd5b506001600160a01b03813581169160200135166107ed565b6001600160e01b03191660009081526020819052604090205460ff1690565b600061039c8261081b565b6103d75760405162461bcd60e51b815260040180806020018281038252602c81526020018061106a602c913960400191505060405180910390fd5b506000908152600260205260409020546001600160a01b031690565b60006103fe826105c8565b9050806001600160a01b0316836001600160a01b031614156104515760405162461bcd60e51b81526004018080602001828103825260218152602001806110bf6021913960400191505060405180910390fd5b806001600160a01b0316610463610838565b6001600160a01b0316148061048457506104848161047f610838565b6107ed565b6104bf5760405162461bcd60e51b8152600401808060200182810382526038815260200180610fdf6038913960400191505060405180910390fd5b60008281526002602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60055490565b61053261052c610838565b8261083c565b61056d5760405162461bcd60e51b81526004018080602001828103825260318152602001806110e06031913960400191505060405180910390fd5b6105788383836108e0565b505050565b60055460005b8281101561059f5761059784828401610a24565b600101610583565b505060058054909101905550565b6105788383836040518060200160405280600081525061078f565b6000818152600160205260408120546001600160a01b03168061061c5760405162461bcd60e51b81526004018080602001828103825260298152602001806110416029913960400191505060405180910390fd5b92915050565b60006001600160a01b0382166106695760405162461bcd60e51b815260040180806020018281038252602a815260200180611017602a913960400191505060405180910390fd5b6001600160a01b038216600090815260036020526040902061061c90610b55565b610692610838565b6001600160a01b0316826001600160a01b031614156106f8576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b8060046000610705610838565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155610749610838565b60408051841515815290516001600160a01b0392909216917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319181900360200190a35050565b6107a061079a610838565b8361083c565b6107db5760405162461bcd60e51b81526004018080602001828103825260318152602001806110e06031913960400191505060405180910390fd5b6107e784848484610b59565b50505050565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205460ff1690565b6000908152600160205260409020546001600160a01b0316151590565b3390565b60006108478261081b565b6108825760405162461bcd60e51b815260040180806020018281038252602c815260200180610fb3602c913960400191505060405180910390fd5b600061088d836105c8565b9050806001600160a01b0316846001600160a01b031614806108c85750836001600160a01b03166108bd84610391565b6001600160a01b0316145b806108d857506108d881856107ed565b949350505050565b826001600160a01b03166108f3826105c8565b6001600160a01b0316146109385760405162461bcd60e51b81526004018080602001828103825260298152602001806110966029913960400191505060405180910390fd5b6001600160a01b03821661097d5760405162461bcd60e51b8152600401808060200182810382526024815260200180610f8f6024913960400191505060405180910390fd5b61098681610bab565b6001600160a01b03831660009081526003602052604090206109a790610be8565b6001600160a01b03821660009081526003602052604090206109c890610bff565b60008181526001602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b038216610a7f576040805162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b610a888161081b565b15610ada576040805162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015290519081900360640190fd5b600081815260016020908152604080832080546001600160a01b0319166001600160a01b038716908117909155835260039091529020610b1990610bff565b60405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b5490565b610b648484846108e0565b610b7084848484610c08565b6107e75760405162461bcd60e51b8152600401808060200182810382526032815260200180610f5d6032913960400191505060405180910390fd5b6000818152600260205260409020546001600160a01b031615610be557600081815260026020526040902080546001600160a01b03191690555b50565b8054610bfb90600163ffffffff610e4316565b9055565b80546001019055565b6000610c1c846001600160a01b0316610e8c565b610c28575060016108d8565b600060606001600160a01b038616630a85bd0160e11b610c46610838565b89888860405160240180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610cbf578181015183820152602001610ca7565b50505050905090810190601f168015610cec5780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909a16999099178952518151919890975087965094509250829150849050835b60208310610d545780518252601f199092019160209182019101610d35565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610db6576040519150601f19603f3d011682016040523d82523d6000602084013e610dbb565b606091505b509150915081610e0c57805115610dd55780518082602001fd5b60405162461bcd60e51b8152600401808060200182810382526032815260200180610f5d6032913960400191505060405180910390fd5b6000818060200190516020811015610e2357600080fd5b50516001600160e01b031916630a85bd0160e11b1493506108d892505050565b6000610e8583836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610ec5565b9392505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906108d8575050151592915050565b60008184841115610f545760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610f19578181015183820152602001610f01565b50505050905090810190601f168015610f465780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505090039056fe4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a265627a7a7231582068d2c5f8a9a9c6a76462da045b5736e5afb7c512cc72a6b7ee8140103311be8764736f6c634300050b0032";
}
